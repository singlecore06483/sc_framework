import requests
from bs4 import BeautifulSoup

def scan_wordpress_vulnerabilities(url):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            # Check for WordPress-specific headers
            if 'X-Powered-By' in response.headers and 'WordPress' in response.headers['X-Powered-By']:
                # Check for WordPress version
                if 'wp-includes/version.php' in response.text:
                    response = requests.get(f'{url}/wp-includes/version.php')
                    if response.status_code == 200:
                        soup = BeautifulSoup(response.text, 'html.parser')
                        version = soup.find('meta', {'name': 'generator'})
                        if version:
                            version_number = version['content'].split(' ')[1]
                            if version_number < '4.7.2':
                                return True, "WordPress version is vulnerable to XSS"
            # Check for WordPress-specific files
            if 'wp-admin' in response.text or 'wp-login' in response.text:
                # Check for file inclusion vulnerabilities
                if 'wp-admin/includes/file.php' in response.text:
                    response = requests.get(f'{url}/wp-admin/includes/file.php')
                    if response.status_code == 200:
                        if 'allow_url_include' in response.text:
                            return True, "WordPress file inclusion vulnerability"
                # Check for user enumeration vulnerabilities
                if 'wp-login.php' in response.text:
                    response = requests.post(f'{url}/wp-login.php', data={'log': 'admin', 'pwd': 'password'})
                    if 'incorrect' in response.text:
                        return True, "WordPress user enumeration vulnerability"
        return False, None
    except requests.exceptions.RequestException:
        return False, None

# Example usage
url = input("URL: ")
vulnerable, message = scan_wordpress_vulnerabilities(url)
if vulnerable:
    print(f"{url} is vulnerable to {message}.")
else:
    print(f"{url} does not appear to be vulnerable to WordPress vulnerabilities.")
