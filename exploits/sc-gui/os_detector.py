import socket
import struct
import sys

def detect_os_version(target_ip):
    # Create a raw socket
    sock = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_TCP)
    sock.settimeout(5)

    # Craft a TCP packet with a specific payload
    packet = struct.pack('!HHIIBBHHH', 0, 0, 0, 0, 0, 0, 0, 0, 0)

    try:
        # Send the packet to the target IP
        sock.sendto(packet, (target_ip, 80))

        # Receive the response
        response = sock.recv(1024)

        # Check the response for specific OS version signatures
        if b'Windows' in response:
            if b'Windows NT 10.0' in response:
                return 'Windows 10'
            elif b'Windows NT 6.3' in response:
                return 'Windows 8.1'
            elif b'Windows NT 6.2' in response:
                return 'Windows 8'
            elif b'Windows NT 6.1' in response:
                return 'Windows 7'
            elif b'Windows NT 6.0' in response:
                return 'Windows Vista'
            elif b'Windows NT 5.1' in response:
                return 'Windows XP'
            else:
                return 'Windows (Unknown Version)'
        elif b'Linux' in response:
            if b'Ubuntu' in response:
                return 'Ubuntu'
            elif b'Debian' in response:
                return 'Debian'
            elif b'CentOS' in response:
                return 'CentOS'
            else:
                return 'Linux (Unknown Distribution)'
        elif b'macOS' in response:
            if b'10.15' in response:
                return 'macOS 10.15'
            elif b'10.14' in response:
                return 'macOS 10.14'
            elif b'10.13' in response:
                return 'macOS 10.13'
            else:
                return 'macOS (Unknown Version)'
        else:
            return 'Unknown'
    except socket.timeout:
        return 'No response'
    finally:
        sock.close()

# Usage example
if __name__ == '__main__':

    target_ip = input(" ")
    os_version = detect_os_version(target_ip)
    print(f'Detected operating system version: {os_version}')
